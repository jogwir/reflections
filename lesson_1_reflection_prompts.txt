How did viewing a diff between two versions of a file help you see the bug that
was introduced?  

It allows you to easily identify the changes between the working and failing files, saving time.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?    

You can quickly refer to changes that were made to earlier versions, identifying issues and rectifying them.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?


Manually creating commits gives you complete control and limits creating versions for minor content changes that may not need a new version. You can also name the commit 
sensibly to ease change identification. Automatic creation gives large numbers of versions, for very small changes, which can make it more difficult to find specific changes. 
Automatic versions also mean you may have non-working code in a single commit.

Manual creation has the danger of forgetting to commit the changes.




Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    

A large development project can contain many related source files, making it sensible to combine them in a single commit as they are part of singular piece of work.



How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
